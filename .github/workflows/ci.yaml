name: ci
on: 
  pull_request:
jobs:
  go-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.x
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run linters
        uses: golangci/golangci-lint-action@v5
        with:
          version: latest
          args: --timeout=3m
  go-test:
    strategy:
      matrix:
        go-version: [1.22.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        if: success()
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v4
      - name: go tests
        run: go test -v -covermode=count -json ./... > test.json
      - name: annotate go tests
        if: always()
        uses: guyarb/golang-test-annotations@v0.5.1
        with:
          test-results: test.json

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        # Maps tcp port 5432 on service container to the host
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: bitbucket
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: bitbucket
        # needed because the postgres container does not provide a healthcheck
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 3
          --health-start-period 90s

      bitbucket:
        image: atlassian/bitbucket-server:8.9.4
        env:
          JVM_MINIMUM_MEMORY: 2g
          JVM_MAXIMUM_MEMORY: 4g
          JDBC_DRIVER: org.postgresql.Driver
          JDBC_USER: bitbucket
          JDBC_PASSWORD: ${{ secrets.DB_PASSWORD }}
          JDBC_URL: jdbc:postgresql://postgres:5432/bitbucket
        ports:
          - '7990:7990'
        options: >-
          --health-cmd "curl -f http://localhost:7990/"
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 3
          --health-start-period 90s

    env:
      BATON_LOG_LEVEL: debug
      # Add any environment variables needed to run baton-bitbucket-datacenter
      BATON_BITBUCKETDC_BASEURL: 'http://localhost:7990'
      BATON_BITBUCKETDC_USERNAME: ${{ secrets.BATON_BITBUCKETDC_USERNAME }}
      BATON_BITBUCKETDC_PASSWORD: ${{ secrets.BATON_BITBUCKETDC_PASSWORD }}
      # The following parameters are passed to grant/revoke commands
      CONNECTOR_GRANT: 'group:local-group:ADMIN:user:62'
      CONNECTOR_ENTITLEMENT: 'group:local-group:ADMIN'
      CONNECTOR_PRINCIPAL_TYPE: 'user'
      CONNECTOR_PRINCIPAL: '62'
    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.x
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install baton
        run: ./scripts/get-baton.sh && mv baton /usr/local/bin
      - name: Import sql into postgres
        run: |
          psql -h localhost --user bitbucket -f data.sql
        env:
          PGPASSWORD: ${{ secrets.DB_PASSWORD }}
      - name: Build baton-bitbucket-datacenter
        run: go build ./cmd/baton-bitbucket-datacenter
      - name: Get initial status    
        run: |
          curl -LI localhost:7990/status -o /dev/null -w '%{http_code}\n' -s        
      - name: Sleep for 3 minutes
        run: sleep 180s
      - name: Get running status    
        run: curl -LI localhost:7990/status -o /dev/null -w '%{http_code}\n' -s  
      - name: Run baton-bitbucket-datacenter
        run: ./baton-bitbucket-datacenter --bitbucketdc-username ${{ env.BATON_BITBUCKETDC_USERNAME }} --bitbucketdc-password ${{ env.BATON_BITBUCKETDC_PASSWORD }} --bitbucketdc-baseurl ${{ env.BATON_BITBUCKETDC_BASEURL }} --log-level=debug
      - name: Check for grant before revoking
        run: |
          ./baton-bitbucket-datacenter --bitbucketdc-username ${{ env.BATON_BITBUCKETDC_USERNAME }} --bitbucketdc-password ${{ env.BATON_BITBUCKETDC_PASSWORD }} --bitbucketdc-baseurl ${{ env.BATON_BITBUCKETDC_BASEURL }} --log-level=debug
          baton grants --entitlement ${{ env.CONNECTOR_ENTITLEMENT }} --output-format=json | jq -e ".grants | any(.principal.id.resource ==\"${{ env.CONNECTOR_PRINCIPAL }}\")"
      - name: Revoke grants
        run: |
          ./baton-bitbucket-datacenter --bitbucketdc-username ${{ env.BATON_BITBUCKETDC_USERNAME }} --bitbucketdc-password ${{ env.BATON_BITBUCKETDC_PASSWORD }} --bitbucketdc-baseurl ${{ env.BATON_BITBUCKETDC_BASEURL }} --log-level=debug
          ./baton-bitbucket-datacenter --bitbucketdc-username ${{ env.BATON_BITBUCKETDC_USERNAME }} --bitbucketdc-password ${{ env.BATON_BITBUCKETDC_PASSWORD }} --bitbucketdc-baseurl ${{ env.BATON_BITBUCKETDC_BASEURL }} --log-level=debug --revoke-grant ${{ env.CONNECTOR_GRANT }}
      - name: Check grant was revoked
        run: |
           ./baton-bitbucket-datacenter --bitbucketdc-username ${{ env.BATON_BITBUCKETDC_USERNAME }} --bitbucketdc-password ${{ env.BATON_BITBUCKETDC_PASSWORD }} --bitbucketdc-baseurl ${{ env.BATON_BITBUCKETDC_BASEURL }} --log-level=debug
           baton grants --entitlement ${{ env.CONNECTOR_ENTITLEMENT }} --output-format=json | jq -e ".grants | any(.principal.id.resource !=\"${{ env.CONNECTOR_PRINCIPAL }}\")"
      - name: Grant entitlement
        run: | 
          ./baton-bitbucket-datacenter --bitbucketdc-username ${{ env.BATON_BITBUCKETDC_USERNAME }} --bitbucketdc-password ${{ env.BATON_BITBUCKETDC_PASSWORD }} --bitbucketdc-baseurl ${{ env.BATON_BITBUCKETDC_BASEURL }} --log-level=debug
          ./baton-bitbucket-datacenter --bitbucketdc-username ${{ env.BATON_BITBUCKETDC_USERNAME }} --bitbucketdc-password ${{ env.BATON_BITBUCKETDC_PASSWORD }} --bitbucketdc-baseurl ${{ env.BATON_BITBUCKETDC_BASEURL }} --log-level=debug --grant-principal ${{ env.CONNECTOR_PRINCIPAL }} --grant-principal-type ${{ env.CONNECTOR_PRINCIPAL_TYPE }}
      - name: Check grant was re-granted
        run: |
          ./baton-bitbucket-datacenter --bitbucketdc-username ${{ env.BATON_BITBUCKETDC_USERNAME }} --bitbucketdc-password ${{ env.BATON_BITBUCKETDC_PASSWORD }} --bitbucketdc-baseurl ${{ env.BATON_BITBUCKETDC_BASEURL }} --log-level=debug
          baton grants --entitlement ${{ env.CONNECTOR_ENTITLEMENT }} --output-format=json | jq -e ".grants | any(.principal.id.resource ==\"${{ env.CONNECTOR_PRINCIPAL }}\")"